C51 COMPILER V9.56.0.0   MAIN                                                              11/10/2017 09:15:01 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(C:\Keil_v5\C51\INC\SiLABS\sh
                    -ared\si8051Base) DEBUG PRINT(.\Listings\main.lst) TABS(2)

line level    source

   1          #include <stdint.h>   //路徑：C:\Keil_v5\C51\INC\SiLABS\shared\si8051Base
   2          #include <stdlib.h>
   3          #include <stdio.h>
   4          #include <REG_MPC89L51-515.h>
   5          
   6          /*==== 132 Function ====*/
   7          #include "CPLD.h"
   8          #include "LCM.h"
   9          #include "EPROM.h"
  10          #include "Interrupt.h"
  11          #include "RS232.h"
  12          #include "main.h"
  13          #include "Input.h"
  14          #include "error.h"
  15          #include "Motor.h"
  16          
  17          
  18          /*====  繁/簡體中文字標頭檔    ====*/
  19          //#include "LCM_BIG5.h"
  20          //#include "LCM_GB2312.h"
  21          
  22          /*====  其他標頭檔 ====*/
  23          #include "delay.h" //延遲函式
  24          #include "other.h" //其他功能
  25          
  26          /*====  測試UART用全域變數 ====*/
  27          int UART_flag = 0;
  28          
  29          //unsigned char TEXT[4];
  30          //unsigned char TEXT_CO = 0;
  31          
  32          
  33          /*===================================*/
  34          
  35          void main ( void ) {
  36   1          
  37   1        /*====  Keil C 變數需宣告於開頭   ====*/
  38   1      //    char  Text[] = "Hello UART!";
  39   1          unsigned char XXX = 0,  YYY = 0;
  40   1          int ZZZ = 0;
  41   1      
  42   1        /*====  初始化函式 ====*/
  43   1          /**投幣器致能**/
  44   1      //    Enable_Pin(COIN_1);
  45   1        
  46   1          /**電子碼表致能**/
  47   1      //    Enable_Pin(METER_CS);
  48   1      
  49   1          /**Interrupt**/
  50   1          INT_Interrupt_Set();
  51   1        
  52   1        /*====  LCM 測試====*/
  53   1        /** 開啟LCM顯示效果使用 **/
  54   1          LCM_Display_Function(1);  //顯示
C51 COMPILER V9.56.0.0   MAIN                                                              11/10/2017 09:15:01 PAGE 2   

  55   1      //    LCM_Display_Function(2);  //顯示+開啟游標
  56   1        
  57   1        /** 全形字體顯示  **/
  58   1      //    LCM_Print_Char_Function(1, LCM_BIG5_String);
  59   1        
  60   1        /** 半形字體顯示  **/
  61   1      //    LCM_Print_Char_Function(1, );
  62   1      //    LCM_Print_Char_Function(2, "Hello 2");
  63   1      //    LCM_Print_Char_Function(3, "Hello 3");
  64   1        
  65   1        /** 數字顯示  **/
  66   1      //    LCM_Print_Number_Function(4,3345678);
  67   1      
  68   1        /*====  EPROM 測試  ====*/
  69   1      //    EPROM_Test(); //執行時間太久12 sec
  70   1      
  71   1        /*====  8051中斷(Interrupt)測試====*/ 
  72   1      //    EA = EX1 = 1; //外部觸發 INT1
  73   1      //    LCM_Print_Number_Function(2,555);
  74   1          
  75   1      //    while(1) {
  76   1      //      for(i=0; i<10; i++){
  77   1      //          LCM_Print_Number_Function(2,i);
  78   1      //          delay100ms(5);
  79   1      //      }
  80   1      //    }
  81   1        /*==== UART 測試 ====*/
  82   1      //    RS232_Basic_Setting(); //開啟UART
  83   1          
  84   1        /** RS232 寫入測試  **/
  85   1      //    RS232_Write(Text); 
  86   1      //    delay100ms(10);
  87   1          
  88   1        /** RS232 讀取測試  **/
  89   1      //    while(1) {
  90   1      //      
  91   1      //      //等待中斷傳輸完畢，旗標為1時，LCM再顯示
  92   1      //      if( UART_flag == 1 ) {
  93   1      //            LCM_Print_Char_Function(3,TEXT);
  94   1      //            UART_flag = 0;
  95   1      //        }
  96   1      //    }
  97   1      
  98   1        /*====  output 測試   ====*/
  99   1        /** LED控制：直接查pdf-output，對照pdf-CPLD直接控制  **/
 100   1        /** 腳位拉High，輸出為Low，所以要接零件的負極  **/
 101   1      
 102   1          //cpld_out(0x75,1); //LED亮
 103   1          //cpld_out(0x75,0); //LED熄  
 104   1        
 105   1        /*====  Motor 測試    ====*/
 106   1        //DC_test_Motor(DC_Motor_01, REV);
 107   1      
 108   1      
 109   1        /**  Motor：按鈕+按鈕控制( 按鈕自訂 ) **/
 110   1        /** JP5_PT1   = 電眼   **/
 111   1        /** GOOD2     = 按鈕   **/
 112   1        /** JP5_GOOD1 = 近接   **/
 113   1        
 114   1        while(1) {
 115   2      
 116   2            if( Input_Pin_Data(JP5_PT1) == 0 ) {
C51 COMPILER V9.56.0.0   MAIN                                                              11/10/2017 09:15:01 PAGE 3   

 117   3              DC_test_Motor(DC_Motor_01, STOP);
 118   3              DC_test_Motor(DC_Motor_02, STOP);
 119   3              DC_test_Motor(DC_Motor_03, STOP);
 120   3              DC_test_Motor(DC_Motor_04, STOP);
 121   3            }
 122   2       
 123   2            else if( Input_Pin_Data(JP5_GOOD1) == 1 ) {
 124   3              DC_test_Motor(DC_Motor_01, FWD);
 125   3              DC_test_Motor(DC_Motor_02, FWD);
 126   3              DC_test_Motor(DC_Motor_03, FWD);
 127   3              DC_test_Motor(DC_Motor_04, FWD);
 128   3            }
 129   2            else if( Input_Pin_Data(JP5_GOOD1) == 0 ) {
 130   3              DC_test_Motor(DC_Motor_01, REV);
 131   3              DC_test_Motor(DC_Motor_02, REV);
 132   3              DC_test_Motor(DC_Motor_03, REV);
 133   3              DC_test_Motor(DC_Motor_04, REV);
 134   3            }
 135   2      
 136   2      
 137   2        }
 138   1        
 139   1      
 140   1      
 141   1        
 142   1        /*====  input 測試    ====*/
 143   1          //LCM_Print_Number_Function(3,XXX); 
 144   1      //    while(1) {
 145   1      
 146   1      //      YYY = Input_Hold_Detect(GOOD2);
 147   1              
 148   1            /** 按鈕持續ON/OFF  **/
 149   1      //        LCM_Print_Number_Function(3,XXX);
 150   1      //        LCM_Print_Number_Function(1,YYY);
 151   1      
 152   1      //      if( Input_Pin_Data(JP5_GOOD1) == 1 ) {
 153   1      //          //LCM_Print_Char_Function(1, "BUTTON OFF");
 154   1      //          cpld_out(0x75,0); //LED OFF
 155   1      //          cpld_action();
 156   1      //          //XXX++;
 157   1      //      }
 158   1      //      else if( Input_Pin_Data(JP5_GOOD1) == 0 ) {
 159   1      //          //LCM_Print_Char_Function(1, "BUTTON ON");  
 160   1      //          cpld_out(0x75,1); ////LED ON
 161   1      //          cpld_action();
 162   1      //          //XXX = 0;
 163   1      //      }
 164   1            
 165   1              /** 按鈕保持測試  **/
 166   1      //      if( Input_Pin_Data(JP5_GOOD1) == 1 ) {
 167   1      
 168   1      //          XXX = 0;
 169   1      //          YYY = 0;
 170   1      //      }
 171   1      //      else if( Input_Pin_Data(JP5_GOOD1) == 0 &&  YYY < 5 ) {
 172   1      
 173   1      //          XXX++;
 174   1      //          delay100ms(8);
 175   1      //          YYY++;
 176   1      //      }
 177   1      //      else if(  Input_Pin_Data(JP5_GOOD1) == 0  &&  YYY >=  5 ) {
 178   1      //          XXX++;
C51 COMPILER V9.56.0.0   MAIN                                                              11/10/2017 09:15:01 PAGE 4   

 179   1      //      }
 180   1      
 181   1              /** 按鈕只偵測一次 **/
 182   1      //      XXX = YYY;
 183   1      //      YYY = Input_Pin_Data(GOOD2);
 184   1      //      
 185   1      //      if( XXX == 1  &&  YYY == 0 ) {
 186   1      //          
 187   1      //          Meter_ADD(METER_A);
 188   1      //          Meter_ADD(METER_B);
 189   1      //          Meter_ADD(METER_C);
 190   1      
 191   1      //      }
 192   1          
 193   1      //    }
 194   1      
 195   1          /**  電眼測試  **/
 196   1      //    while(1) {
 197   1      //      if( Input_Pin_Data(JP5_PT1) == 0 ) {
 198   1      //        cpld_out(0xB3,1); //LED亮
 199   1      //      }
 200   1      //      else if( Input_Pin_Data(JP5_PT1) == 1 ) {
 201   1      //        cpld_out(0xB3,0); //LED熄
 202   1      //      }
 203   1      //    }
 204   1      
 205   1          
 206   1          
 207   1          /*====  不離開main ====*/
 208   1          /** 8051會自己重複執行 main 的程式  **/
 209   1          while(1);
 210   1          
 211   1      }//main end
 212          
 213          
 214            /*====  UART中斷測試    ====*/
 215          //void UART_timer1(void) interrupt 4 {
 216          //  
 217          //    //LED ON
 218          //    cpld_out(0xB3,1);
 219          //    cpld_action();
 220          
 221          //    
 222          //    TEXT[TEXT_CO] = RS232_Read();
 223          //    TEXT_CO++ ;
 224          //  
 225          //    
 226          //    if(TEXT_CO == 5) { 
 227          //      
 228          //      TEXT_CO = 0;
 229          //      //讀取時使用旗標的方式，等待中斷資料傳輸完畢，再輸出
 230          //      UART_flag = 1;
 231          //    
 232          //    }
 233          //  
 234          //    //LED OFF
 235          //    cpld_out(0xB3,0);
 236          //    cpld_action();
 237          
 238          //}
 239          
 240            /*====  Timer0 計時中斷測試   ====*/
C51 COMPILER V9.56.0.0   MAIN                                                              11/10/2017 09:15:01 PAGE 5   

 241          void MY_timer0(void) interrupt 1 {
 242   1          
 243   1          /**  計時中斷變數宣告  **/
 244   1      //    static int test_flag = 0;
 245   1          TH0 = TH_M1;
 246   1          TL0 = TL_M1;
 247   1        
 248   1          /** 測試計時中斷是否作用  **/
 249   1      //  if(UART_flag == 1 ) {
 250   1      //    cpld_out(0xB3,1);   //LED亮    
 251   1      //  }
 252   1      //  else if( UART_flag == 500 ){
 253   1      //    cpld_out(0xB3,0);   //LED熄
 254   1      //  }
 255   1      //  else if( UART_flag == 1000 ){
 256   1      //    UART_flag = 0;
 257   1      //  }
 258   1      //  UART_flag++;
 259   1        
 260   1          /** 投幣器測試 **/
 261   1          //Coin_Function();
 262   1          
 263   1          
 264   1          /** 電子碼表+投幣器  **/
 265   1          /**Coin_Rate 設定指定的電子暫存投幣比率**/
 266   1      //    if( Coin_Function() == 1) { 
 267   1      //      
 268   1      //      test_flag = 1;  //偵測到投幣時 test_flag=1 執行電子碼錶函式
 269   1      //      
 270   1      //    //設定電子碼錶匯率(偵測到一次投幣 +X 次)
 271   1      //      Coin_Rate.MeterA = 2; //投一個硬幣 電子碼錶A+2
 272   1      //      Coin_Rate.MeterB = 1; //投一個硬幣 電子碼錶B+1
 273   1      //      Coin_Rate.MeterC = 1;
 274   1      //    }
 275   1          
 276   1      //    if( test_flag == 1 ) {
 277   1      //      
 278   1      //        Meter_ADD( &Coin_Rate.MeterA, &Coin_Rate.MeterB, &Coin_Rate.MeterC);  //執行電子碼錶累加
 279   1      //      
 280   1      //      //判斷電子碼錶函式是否執行完畢
 281   1      //        if( Meter_ADD( &Coin_Rate.MeterA, &Coin_Rate.MeterB, &Coin_Rate.MeterC) == 1) {
 282   1      //          
 283   1      //        //如果執行完畢：
 284   1      //          test_flag =0; //旗標拉LOW，等待下一次投幣判斷  
 285   1      //        } 
 286   1      //    }
 287   1      
 288   1      }
 289          
 290            /*====  Timer1 計時中斷測試   ====*/
 291          void MY_timer1(void) interrupt 3 {
 292   1          
 293   1          /**  計時中斷變數宣告  **/
 294   1      
 295   1          /**  中斷計時設定  **/
 296   1          TH1 = TH_M1;
 297   1          TL1 = TL_M1;
 298   1        
 299   1          /** 測試計時中斷是否作用  **/
 300   1      //  if(UART_flag == 1 ) {
 301   1      //    cpld_out(0xB3,1);   //LED亮    
 302   1      //  }
C51 COMPILER V9.56.0.0   MAIN                                                              11/10/2017 09:15:01 PAGE 6   

 303   1      //  else if( UART_flag == 500 ){
 304   1          //cpld_out(0xB3,0);   //LED熄
 305   1      //  }
 306   1      //  else if( UART_flag == 1000 ){
 307   1      //    UART_flag = 0;
 308   1      //  }
 309   1      //  UART_flag++;
 310   1      
 311   1        
 312   1          /**  PWM 控制  **/
 313   1        
 314   1        
 315   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    138    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       4
   IDATA SIZE       =      3    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
